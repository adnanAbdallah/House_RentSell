{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HousingService = /*#__PURE__*/(() => {\n  class HousingService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.baseUrl;\n    }\n    getAllCities() {\n      return this.http.get(this.baseUrl + '/city/cities');\n    }\n    getPropertyTypes() {\n      return this.http.get(this.baseUrl + '/propertytype/list');\n    }\n    getFurnishingTypes() {\n      return this.http.get(this.baseUrl + '/furnishingtype/list');\n    }\n    getProperty(id) {\n      return this.http.get(this.baseUrl + '/property/detail/' + id.toString());\n    }\n    getAllProperties(SellRent) {\n      return this.http.get(this.baseUrl + '/property/list/' + SellRent.toString());\n    }\n    addProperty(property) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n      return this.http.post(this.baseUrl + '/property/add', property, httpOptions);\n    }\n    newPropID() {\n      if (localStorage.getItem('PID')) {\n        localStorage.setItem('PID', String(+localStorage.getItem('PID') + 1));\n        return +localStorage.getItem('PID');\n      } else {\n        localStorage.setItem('PID', '101');\n        return 101;\n      }\n    }\n    getPropertyAge(dateofEstablishment) {\n      const today = new Date();\n      const estDate = new Date(dateofEstablishment);\n      let age = today.getFullYear() - estDate.getFullYear();\n      const m = today.getMonth() - estDate.getMonth();\n      // Current month smaller than establishment month or\n      // Same month but current date smaller than establishment date\n      if (m < 0 || m === 0 && today.getDate() < estDate.getDate()) {\n        age--;\n      }\n      // Establshment date is future date\n      if (today < estDate) {\n        return '0';\n      }\n      // Age is less than a year\n      if (age === 0) {\n        return 'Less than a year';\n      }\n      return age.toString();\n    }\n    setPrimaryPhoto(propertyId, propertyPhotoId) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n      return this.http.post(this.baseUrl + '/property/set-primary-photo/' + String(propertyId) + '/' + propertyPhotoId, {}, httpOptions);\n    }\n    deletePhoto(propertyId, propertyPhotoId) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n      return this.http.delete(this.baseUrl + '/property/delete-photo/' + String(propertyId) + '/' + propertyPhotoId, httpOptions);\n    }\n    static #_ = this.ɵfac = function HousingService_Factory(t) {\n      return new (t || HousingService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HousingService,\n      factory: HousingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return HousingService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}